"use strict";(self.webpackChunkaquadoggo_website=self.webpackChunkaquadoggo_website||[]).push([[6762],{87:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>p,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var o=i(5893),a=i(1151);const t={title:"Specifications"},s=void 0,c={id:"specifications/index",title:"Specifications",description:"namakemono",source:"@site/docs/specifications/index.md",sourceDirName:"specifications",slug:"/specifications/",permalink:"/specifications/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Specifications"},sidebar:"specifications",next:{title:"namakemono",permalink:"/specifications/namakemono/"}},r={},l=[{value:"namakemono",id:"namakemono",level:2},{value:"aquadoggo API",id:"aquadoggo-api",level:2}];function d(e){const n={a:"a",em:"em",h2:"h2",li:"li",p:"p",ul:"ul",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"namakemono",children:"namakemono"}),"\n",(0,o.jsxs)(n.p,{children:["The core specification of p2panda is ",(0,o.jsx)(n.em,{children:"namakemono"}),' (Japanese for "sloth"), it defines the core data type for offline-first applications and gives them efficient replication, deletion, capabilities, encryption and more.']}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\ud83e\udda5 ",(0,o.jsx)(n.a,{href:"/specifications/namakemono/",children:"Namakemono specification"})]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"aquadoggo-api",children:"aquadoggo API"}),"\n",(0,o.jsx)(n.p,{children:"p2panda designed a toolbox of SDKs for application developers to easily build full p2p clients for the web, mobile or desktop. This specification is a detailed outline of all APIs and data types used by it."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\ud83d\udc2c ",(0,o.jsx)(n.a,{href:"/specifications/aquadoggo/",children:"aquadoggo API"})]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>s});var o=i(7294);const a={},t=o.createContext(a);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);